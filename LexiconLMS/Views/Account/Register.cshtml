@model LexiconLMS.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationMessage( "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "text-danger" })
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.ValidationMessageFor(x => x.LastName, "", new { @class = "text-danger" })
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "text-danger" })
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.ValidationMessageFor(x => x.PhoneNumber, "", new { @class = "text-danger" })
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => Model.SelectedRole, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(x => Model.SelectedRole, new SelectList(Model.Roles, "Value", "Text",Model.SelectedRole), htmlAttributes: new { @class = "form-control", id = "Role" })
            @Html.ValidationMessageFor(x => x.SelectedRole, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => Model.SelectedCourse, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(x => Model.SelectedCourse, new SelectList(Model.Courses, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "course" })
            @Html.ValidationMessageFor(x => x.SelectedCourse, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(Document).ready(function () {
            $("#course").prop("disabled", true);
            $("#Role")
                .change(function () {
                    var str = "";
                    $("#Role option:selected").each(function () {
                        str += $(this).text();
                    });
                    if (str == "student") {
                        $("#course").prop("disabled", false);
                    } else {
                        $("#course").prop("disabled", true);
                        $("#course").val('').change();
                    }
                })
                .change();
        }
        );

    </script>
}
